# This workflow will:
# - compile and sign project on linux with JDK 17
# - run sonar on linux
# - deploy snapshot on maven

name: Build

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      JDK_VERSION: 17

    steps:
     - name: Checkout
       uses: actions/checkout@v3.5.0
       with:
         fetch-depth: 0

     - name: Cache
       uses: actions/cache@v3.3.1
       with:
          path: ~/.m2/repository
          key: maven-${{ hashFiles('pom.xml') }}

     - name: Maven
       uses: stCarolas/setup-maven@v4.5
       with:
         maven-version: 3.9.6

     - name: Set JDK
       uses: actions/setup-java@v3.11.0
       with:
         java-version: |
           17
         distribution: 'temurin'
         mvn-toolchain-id: |
           JavaSE-17
         server-id: ossrh
         server-username: MAVEN_USERNAME
         server-password: MAVEN_PASSWORD

     - name: maven-settings-xml-action
       run: cat ~/.m2/settings.xml | echo "<settings><servers><server><id>ossrh</id><username>"${{ secrets.MAVEN_USERNAME }}"</username><password>"${{ secrets.MAVEN_PASSWORD }}"</password></server></servers><mirrors><mirror><id>maven-default-http-blocker</id><mirrorOf>external:dont-match-anything-mate:*</mirrorOf><name>Pseudo repo.</name><url>http://0.0.0.0/</url><blocked>false</blocked></mirror></mirrors></settings>" > ~/.m2/settings.xml

     - name: Import GPG key
       uses: crazy-max/ghaction-import-gpg@v5.2.0
       with:
         gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
         passphrase: ${{ secrets.GPG_PASSPHRASE }}

     - name: Compile
       run: mvn clean deploy -U -Dgpg.passphrase=${{ secrets.GPG_PASSPHRASE }} -Prelease
       env:
          MAVEN_USERNAME: ${{ secrets.MAVEN_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.MAVEN_PASSWORD }}

  sonar:
    runs-on: ubuntu-latest
    env:
      JDK_VERSION: 17

    steps:
     - name: Checkout
       uses: actions/checkout@v3.5.0
       with:
         fetch-depth: 0

     - name: Cache
       uses: actions/cache@v3.3.1
       with:
          path: ~/.m2/repository
          key: maven-${{ hashFiles('pom.xml') }}

     - name: Maven
       uses: stCarolas/setup-maven@v4.5
       with:
         maven-version: 3.9.6

     - name: Set JDK
       uses: actions/setup-java@v3.11.0
       with:
         java-version: |
           17
         distribution: 'temurin'
         mvn-toolchain-id: |
           JavaSE-17

     - name: maven-settings-xml-action
       run: cat ~/.m2/settings.xml | echo "<settings><mirrors><mirror><id>maven-default-http-blocker</id><mirrorOf>external:dont-match-anything-mate:*</mirrorOf><name>Pseudo repo.</name><url>http://0.0.0.0/</url><blocked>false</blocked></mirror></mirrors></settings>" > ~/.m2/settings.xml

     - name: Compile
       run: mvn clean org.sonarsource.scanner.maven:sonar-maven-plugin:sonar verify -U -Dsonar.organization=b3dgs -Dsonar.host.url=https://sonarcloud.io -Dsonar.login=${{ secrets.SONAR_TOKEN }} -Dsonar.projectKey=b3dgs_b3dgs-parent
       env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
